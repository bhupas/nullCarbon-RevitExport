<UserControl x:Class="SCaddins.ExportSchedules.Views.ExportSchedulesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SCaddins.ExportSchedules.Views"
             xmlns:converters="clr-namespace:SCaddins.ExportSchedules.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1000"
             Background="#F5F5F5">

    <UserControl.Resources>
        <!-- Converters -->
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>

        <!-- Button Style -->
        <Style x:Key="ActionButton" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#0066A8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#CCCCCC"/>
                                <Setter Property="Foreground" Value="#888888"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Icon Button Style -->
        <Style x:Key="IconButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E6E6E6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Styles -->
        <Style x:Key="ModernDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0,2"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#E3F2FD"/>
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F5F5F5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,6"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ModernDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#F0F0F0"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="#DDDDDD"/>
            <Setter Property="Padding" Value="8,10"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- SearchBox Style -->
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="3">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="Center"/>
                                <TextBlock Text="Search schedules..." 
                                           Margin="{TemplateBinding Padding}" 
                                           VerticalAlignment="Center" 
                                           Foreground="Gray" 
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text.IsEmpty, Converter={StaticResource BoolToVis}}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Selector Style -->
        <Style x:Key="SelectorStyle" TargetType="ComboBox">
            <Setter Property="Padding" Value="10,7"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="13"/>
        </Style>
    </UserControl.Resources>

    <Grid Margin="12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header Section -->
        <Border Grid.Row="0" 
                Background="#007ACC" 
                CornerRadius="4"
                Padding="20,12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="nullCarbon LCA Export" 
                           FontSize="20" 
                           FontWeight="Bold" 
                           Foreground="White"
                           VerticalAlignment="Center"/>

                <!-- Login/Sign Out Button -->
                <Button Grid.Column="1" 
                        Content="{Binding LoginButtonText}"
                        Margin="5"
                        Padding="15,6"
                        cal:Message.Attach="LoginCommand"
                        Foreground="White"
                        Background="#005A99"
                        BorderThickness="0"
                        FontSize="13">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#0066A8"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Border>

        <!-- Team, Building and Report selection panel -->
        <Border Grid.Row="1" 
                Margin="0,12,0,12" 
                Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVis}}"
                Background="White"
                CornerRadius="4"
                BorderBrush="#DDDDDD"
                BorderThickness="1"
                Padding="15,10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Selections in one compact row -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Team Selector -->
                    <StackPanel Grid.Column="0" Margin="0,0,5,0">
                        <TextBlock Text="Team" 
                                   FontWeight="SemiBold" 
                                   Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Teams}"
                                  SelectedItem="{Binding SelectedTeam}"
                                  DisplayMemberPath="Name"
                                  IsEnabled="{Binding IsLoggedIn}"
                                  Style="{StaticResource SelectorStyle}"/>
                    </StackPanel>

                    <!-- Building Selector -->
                    <StackPanel Grid.Column="1" Margin="5,0,5,0">
                        <TextBlock Text="Building" 
                                   FontWeight="SemiBold" 
                                   Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Buildings}"
                                  SelectedItem="{Binding SelectedBuilding}"
                                  DisplayMemberPath="Name"
                                  IsEnabled="{Binding IsLoggedIn}"
                                  Style="{StaticResource SelectorStyle}"/>
                    </StackPanel>

                    <!-- Report Selector -->
                    <StackPanel Grid.Column="2" Margin="5,0,0,0">
                        <TextBlock Text="Report" 
                                   FontWeight="SemiBold" 
                                   Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Reports}"
                                  SelectedItem="{Binding SelectedReport}"
                                  DisplayMemberPath="Name"
                                  IsEnabled="{Binding IsLoggedIn}"
                                  Style="{StaticResource SelectorStyle}"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Border>

        <!-- Schedule List Section with Title and Search in header -->
        <Border Grid.Row="2"
                Background="White"
                CornerRadius="4"
                BorderBrush="#DDDDDD"
                BorderThickness="1"
                Margin="0,0,0,12">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Section Title with Integrated Search -->
                <Border Grid.Row="0"
                        Background="#F0F0F0"
                        BorderThickness="0,0,0,1"
                        BorderBrush="#DDDDDD"
                        Padding="15,8">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Available Schedules" 
                                   FontWeight="SemiBold" 
                                   FontSize="14"
                                   VerticalAlignment="Center"
                                   Margin="0,0,15,0"/>

                        <!-- Wider Search Box - Disabled if no report is selected -->
                        <TextBox Grid.Column="1" 
                                 x:Name="ScheduleFilterText"
                                 Style="{StaticResource SearchBoxStyle}"
                                 MinWidth="350"
                                 Width="Auto"
                                 IsEnabled="{Binding CanSelectSchedules}"
                                 HorizontalAlignment="Stretch"/>
                    </Grid>
                </Border>

                <!-- DataGrid - Disabled if no report is selected -->
                <DataGrid x:Name="Schedules"
                          Grid.Row="1"
                          Margin="0"
                          Padding="5"
                          AutoGenerateColumns="False"
                          GridLinesVisibility="None"
                          RowStyle="{StaticResource ModernDataGridRowStyle}"
                          CellStyle="{StaticResource ModernDataGridCellStyle}"
                          ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeaderStyle}"
                          Background="White"
                          BorderThickness="0"
                          HeadersVisibility="Column"
                          IsEnabled="{Binding CanSelectSchedules}">
                    <!-- Optional ToolTip for when disabled -->
                    <DataGrid.ToolTip>
                        <ToolTip 
                            Visibility="{Binding CanSelectSchedules, Converter={StaticResource BoolToVis}, ConverterParameter=Inverse}">
                            <TextBlock Text="Select a report first to enable schedule selection" />
                        </ToolTip>
                    </DataGrid.ToolTip>

                    <DataGrid.Columns>
                        <!-- DataGridTemplateColumn for selection check box -->
                        <DataGridTemplateColumn Header="Select" Width="70">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!-- Name column -->
                        <DataGridTextColumn IsReadOnly="True"
                                            Header="Name"
                                            Binding="{Binding Schedule.RevitName}"
                                            Width="*"/>
                        <!-- Type column -->
                        <DataGridTextColumn Header="Type"
                                            Binding="{Binding Schedule.Type}"
                                            Width="160"/>
                    </DataGrid.Columns>
                </DataGrid>

                <!-- Overlay message when no report is selected -->
                <Border Grid.Row="1"
                        Background="#F5F5F5"
                        Opacity="0.7"
                        Visibility="{Binding CanSelectSchedules, Converter={StaticResource BoolToVis}, ConverterParameter=Inverse}">
                    <TextBlock Text="Please select a Report above to enable schedule selection"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               FontSize="14"
                               Foreground="#555555"/>
                </Border>
            </Grid>
        </Border>

        <!-- Bottom section: Options and Export buttons -->
        <Border Grid.Row="3"
                Background="White"
                CornerRadius="4"
                BorderBrush="#DDDDDD"
                BorderThickness="1"
                Padding="15,10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button Height="Auto"
                        Width="Auto"
                        MinWidth="20"
                        Margin="0,0,15,0"
                        x:Name="Options"
                        Style="{StaticResource IconButton}"
                        Grid.Column="0">
                    <Image Source="/SCaddins;component/Assets/gear.png" Stretch="None"/>
                    <Button.ToolTip>
                        <TextBlock>Export Options</TextBlock>
                    </Button.ToolTip>
                </Button>

                <Button Height="Auto"
                        Width="Auto"
                        MinWidth="20"
                        Margin="0,0,15,0"
                        x:Name="SelectExportDir"
                        Style="{StaticResource IconButton}"
                        Grid.Column="1">
                    <Image Source="/SCaddins;component/Assets/folder.png" Stretch="None"/>
                    <Button.ToolTip>
                        <TextBlock>Select export directory</TextBlock>
                    </Button.ToolTip>
                </Button>

                <!-- Status Area - Contains Export Dir AND Loading Status -->
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Export Directory - Always visible -->
                    <TextBlock x:Name="ExportDir" 
                               Grid.Row="0"
                               Margin="5,0,5,0" 
                               VerticalAlignment="Center"
                               TextTrimming="CharacterEllipsis"
                               FontSize="13"/>

                    <!-- Status Message During Operations - Overlays the directory when active -->
                    <Border Grid.Row="0" 
                            Visibility="{Binding IsLoading, Converter={StaticResource BoolToVis}}"
                            Background="#F7F7F7"
                            Padding="2,0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding StatusMessage}" 
                                       Foreground="#007ACC" 
                                       Margin="5,0,8,0"
                                       VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"/>
                            <Grid Width="16" Height="16" VerticalAlignment="Center">
                                <Path Stroke="#007ACC" 
                                      StrokeThickness="3" 
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <EllipseGeometry Center="8,8" RadiusX="6" RadiusY="6"/>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <RotateTransform x:Name="SpinnerRotate" Angle="0"/>
                                    </Path.RenderTransform>
                                    <Path.Triggers>
                                        <EventTrigger RoutedEvent="Path.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation 
                                                        Storyboard.TargetName="SpinnerRotate"
                                                        Storyboard.TargetProperty="Angle"
                                                        From="0" To="360" Duration="0:0:1"
                                                        RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Path.Triggers>
                                </Path>
                            </Grid>
                        </StackPanel>
                    </Border>
                </Grid>

                <!-- Single Export Button -->
                <Button x:Name="ExportOnline" 
                        IsEnabled="{Binding ExportOnlineIsEnabled}" 
                        Content="Export" 
                        Style="{StaticResource ActionButton}"
                        Margin="0" 
                        MinWidth="120"
                        Grid.Column="3"
                        Visibility="{Binding IsLoggedIn, Converter={StaticResource BoolToVis}}"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>